// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import (
	context "context"

	builder "bitbucket.org/kushki/usrv-go-core/gateway/dynamo/builder"

	mock "github.com/stretchr/testify/mock"

	types "bitbucket.org/kushki/usrv-go-core/utils/types"
)

// IDynamoGateway is an autogenerated mock type for the IDynamoGateway type
type IDynamoGateway struct {
	mock.Mock
}

// BatchGetItem provides a mock function with given fields: ctx, _a1, out
func (_m *IDynamoGateway) BatchGetItem(ctx context.Context, _a1 *builder.BatchGetItemInputBuilder, out *types.BatchGetItemResponse) error {
	ret := _m.Called(ctx, _a1, out)

	if len(ret) == 0 {
		panic("no return value specified for BatchGetItem")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.BatchGetItemInputBuilder, *types.BatchGetItemResponse) error); ok {
		r0 = rf(ctx, _a1, out)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// BatchWriteItem provides a mock function with given fields: ctx, _a1, out
func (_m *IDynamoGateway) BatchWriteItem(ctx context.Context, _a1 *builder.BatchWriteItemInputBuilder, out *types.BatchWriteItemResponse) error {
	ret := _m.Called(ctx, _a1, out)

	if len(ret) == 0 {
		panic("no return value specified for BatchWriteItem")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.BatchWriteItemInputBuilder, *types.BatchWriteItemResponse) error); ok {
		r0 = rf(ctx, _a1, out)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteItem provides a mock function with given fields: ctx, _a1
func (_m *IDynamoGateway) DeleteItem(ctx context.Context, _a1 *builder.DeleteItemBuilder) error {
	ret := _m.Called(ctx, _a1)

	if len(ret) == 0 {
		panic("no return value specified for DeleteItem")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.DeleteItemBuilder) error); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetCurrentSequential provides a mock function with given fields: ctx, _a1
func (_m *IDynamoGateway) GetCurrentSequential(ctx context.Context, _a1 *builder.GetSequentialBuilder) (int, error) {
	ret := _m.Called(ctx, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GetCurrentSequential")
	}

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.GetSequentialBuilder) (int, error)); ok {
		return rf(ctx, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *builder.GetSequentialBuilder) int); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(context.Context, *builder.GetSequentialBuilder) error); ok {
		r1 = rf(ctx, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetItem provides a mock function with given fields: ctx, _a1, out
func (_m *IDynamoGateway) GetItem(ctx context.Context, _a1 *builder.GetItemBuilder, out interface{}) error {
	ret := _m.Called(ctx, _a1, out)

	if len(ret) == 0 {
		panic("no return value specified for GetItem")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.GetItemBuilder, interface{}) error); ok {
		r0 = rf(ctx, _a1, out)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetSequential provides a mock function with given fields: ctx, _a1
func (_m *IDynamoGateway) GetSequential(ctx context.Context, _a1 *builder.GetSequentialBuilder) (int, error) {
	ret := _m.Called(ctx, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GetSequential")
	}

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.GetSequentialBuilder) (int, error)); ok {
		return rf(ctx, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *builder.GetSequentialBuilder) int); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(context.Context, *builder.GetSequentialBuilder) error); ok {
		r1 = rf(ctx, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSequentialInfo provides a mock function with given fields: ctx, _a1, out
func (_m *IDynamoGateway) GetSequentialInfo(ctx context.Context, _a1 *builder.GetSequentialBuilder, out interface{}) error {
	ret := _m.Called(ctx, _a1, out)

	if len(ret) == 0 {
		panic("no return value specified for GetSequentialInfo")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.GetSequentialBuilder, interface{}) error); ok {
		r0 = rf(ctx, _a1, out)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PutItem provides a mock function with given fields: ctx, _a1
func (_m *IDynamoGateway) PutItem(ctx context.Context, _a1 *builder.PutItemBuilder) error {
	ret := _m.Called(ctx, _a1)

	if len(ret) == 0 {
		panic("no return value specified for PutItem")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.PutItemBuilder) error); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Query provides a mock function with given fields: ctx, _a1, out
func (_m *IDynamoGateway) Query(ctx context.Context, _a1 *builder.QueryBuilder, out interface{}) error {
	ret := _m.Called(ctx, _a1, out)

	if len(ret) == 0 {
		panic("no return value specified for Query")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.QueryBuilder, interface{}) error); ok {
		r0 = rf(ctx, _a1, out)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// QuerySingle provides a mock function with given fields: ctx, _a1, out
func (_m *IDynamoGateway) QuerySingle(ctx context.Context, _a1 *builder.QueryBuilder, out interface{}) error {
	ret := _m.Called(ctx, _a1, out)

	if len(ret) == 0 {
		panic("no return value specified for QuerySingle")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.QueryBuilder, interface{}) error); ok {
		r0 = rf(ctx, _a1, out)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ScanAllItems provides a mock function with given fields: ctx, _a1, out
func (_m *IDynamoGateway) ScanAllItems(ctx context.Context, _a1 *builder.ScanBuilder, out interface{}) error {
	ret := _m.Called(ctx, _a1, out)

	if len(ret) == 0 {
		panic("no return value specified for ScanAllItems")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.ScanBuilder, interface{}) error); ok {
		r0 = rf(ctx, _a1, out)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ScanItems provides a mock function with given fields: ctx, _a1, out
func (_m *IDynamoGateway) ScanItems(ctx context.Context, _a1 *builder.ScanBuilder, out interface{}) error {
	ret := _m.Called(ctx, _a1, out)

	if len(ret) == 0 {
		panic("no return value specified for ScanItems")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.ScanBuilder, interface{}) error); ok {
		r0 = rf(ctx, _a1, out)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TransactWriteItems provides a mock function with given fields: ctx, _a1
func (_m *IDynamoGateway) TransactWriteItems(ctx context.Context, _a1 *builder.TransactWriteItemsBuilder) error {
	ret := _m.Called(ctx, _a1)

	if len(ret) == 0 {
		panic("no return value specified for TransactWriteItems")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.TransactWriteItemsBuilder) error); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateCurrentSequential provides a mock function with given fields: ctx, _a1
func (_m *IDynamoGateway) UpdateCurrentSequential(ctx context.Context, _a1 *builder.UpdateSequentialBuilder) error {
	ret := _m.Called(ctx, _a1)

	if len(ret) == 0 {
		panic("no return value specified for UpdateCurrentSequential")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.UpdateSequentialBuilder) error); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateItem provides a mock function with given fields: ctx, _a1
func (_m *IDynamoGateway) UpdateItem(ctx context.Context, _a1 *builder.UpdateItemBuilder) error {
	ret := _m.Called(ctx, _a1)

	if len(ret) == 0 {
		panic("no return value specified for UpdateItem")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *builder.UpdateItemBuilder) error); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIDynamoGateway creates a new instance of IDynamoGateway. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIDynamoGateway(t interface {
	mock.TestingT
	Cleanup(func())
}) *IDynamoGateway {
	mock := &IDynamoGateway{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
